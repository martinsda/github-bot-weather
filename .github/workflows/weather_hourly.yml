name: Weather Hourly Consumer

on:
  #push:
  #  branches:
  #    - main
  workflow_dispatch:
  release:
    types: [published]
  schedule:
    #- cron: '10 * * * *'  # Runs every hour at minute 10
    - cron: '10 9-17 * * *'  # At minute 10 past every hour from 9 through 17

jobs:
  run-hourly-weather-consumer:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        pip install openmeteo-requests
        pip install requests-cache retry-requests numpy pandas

    - name: Run weather hourly forecast script
      id: forecast
      env:
        OPEN_METEO_CITY_LAT: ${{ vars.OPEN_METEO_CITY_LAT }}
        OPEN_METEO_CITY_LONG: ${{ vars.OPEN_METEO_CITY_LONG }}
      run: |
        python weather_hourlyforecast.py

    - name: Display forecast data
      run: |
        echo "Next hour in #${{ vars.CITY }} ☔ alert"
        echo "Rain forecast: ${{ steps.forecast.outputs.weather_forecast_rain_now_sum }}"
        echo "Rain probability: ${{ steps.forecast.outputs.weather_forecast_rain_now_prob }}"
        echo "Weather code: ${{ steps.forecast.outputs.weather_forecast_now_weathercode }}"
    outputs:
      hour_now: ${{ steps.forecast.outputs.weather_forecast_now_hour }}
      rain: ${{ steps.forecast.outputs.weather_forecast_rain_now_sum }}
      rain_prob: ${{ steps.forecast.outputs.weather_forecast_rain_now_prob }}
      weathercode: ${{ steps.forecast.outputs.weather_forecast_now_weathercode}}
#      tweet_1: "Next hour in #${{ vars.CITY }} ☔ alert"
#      tweet_2: "Rain forecast: ${{ steps.forecast.outputs.weather_forecast_rain_now_sum }}"
#      tweet_3: "Rain probability: ${{ steps.forecast.outputs.weather_forecast_rain_now_prob }}"

  replace-variables:
    runs-on: ubuntu-latest
    needs:
      - run-hourly-weather-consumer
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytz
    - name: Run replace_variables script
      env:
        TEMPLATE_PATH: 'README_template.md'
        OUTPUT_PATH: 'README.md'
        CITY: 'Lisbon'
        COUNTRY: 'Portugal'
        WEATHER_CODE: ${{ needs.run-hourly-weather-consumer.outputs.weathercode }}
        RAIN_FORECAST: ${{ needs.run-hourly-weather-consumer.outputs.rain }}
        RAIN_PROBABILITY:  ${{ needs.run-hourly-weather-consumer.outputs.rain_prob }}
        HOUR_NOW: ${{ needs.run-hourly-weather-consumer.outputs.hour_now }}
        # Add more environment variables as needed
      run: python replace_variables.py
    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add -A
        git commit -m 'Add generated readme file'
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        
#  send-hourly-weather-consumer:
#    runs-on: ubuntu-latest
#    needs:
#      - run-hourly-weather-consumer
#    if: needs.run-hourly-weather-consumer.outputs.rain != 'No rain' 
#    steps:
#    - name: Current weather - Notify twitter
#      uses: nearform-actions/github-action-notify-twitter@master
#      with:
#        message: |
#          needs.run-hourly-weather-consumer.outputs.tweet_1
#          needs.run-hourly-weather-consumer.outputs.tweet_2
#          needs.run-hourly-weather-consumer.outputs.tweet_3
#        twitter-app-key: ${{ secrets.TWITTER_CONSUMER_API_KEY }}
#        twitter-app-secret: ${{ secrets.TWITTER_CONSUMER_API_SECRET }}
#        twitter-access-token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
#        twitter-access-token-secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}

        
        
    
        
